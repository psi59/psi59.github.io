<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on Sangil's Blog</title><link>https://psi59.github.io/posts/</link><description>Recent content in Posts on Sangil's Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Wed, 29 Dec 2021 20:34:00 +0900</lastBuildDate><atom:link href="https://psi59.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang TestMain이란?</title><link>https://psi59.github.io/posts/2021-12-29-golang-test/</link><pubDate>Wed, 29 Dec 2021 20:34:00 +0900</pubDate><guid>https://psi59.github.io/posts/2021-12-29-golang-test/</guid><description>&lt;p>이 포스트는 &lt;code>TestMain&lt;/code>가 무엇이며, 어떤 식으로 사용할 수 있는지에 대해서 정리한 내용입니다.&lt;/p></description></item><item><title>[Real MySQL 8.0] #3 사용자 및 권한</title><link>https://psi59.github.io/posts/2021-12-03-real-mysql-3/</link><pubDate>Fri, 03 Dec 2021 15:34:00 +0900</pubDate><guid>https://psi59.github.io/posts/2021-12-03-real-mysql-3/</guid><description>&lt;p>Real MySQL 3장 사용자 및 권한을 보고 정리한 내용입니다.&lt;/p></description></item><item><title>[Real MySQL 8.0] #2 설치와 설정</title><link>https://psi59.github.io/posts/2021-11-29-real-mysql-2/</link><pubDate>Mon, 29 Nov 2021 23:54:00 +0900</pubDate><guid>https://psi59.github.io/posts/2021-11-29-real-mysql-2/</guid><description>&lt;p>Real MySQL 2장 설치와 설정을 보고 정리한 내용입니다.&lt;/p></description></item><item><title>도커 컨테이너로 배포된 서버를 우아하게 종료하기✨</title><link>https://psi59.github.io/posts/2020-11-14-docker-container-graceful-shutdown/</link><pubDate>Sat, 14 Nov 2020 09:30:00 +0900</pubDate><guid>https://psi59.github.io/posts/2020-11-14-docker-container-graceful-shutdown/</guid><description>&lt;p>프로덕션 환경에서 서버를 정상적으로 종료되는 것은 아주 중요합니다.
예를 들어 이미 수신한 요청을 온전히 처리하지 않고 서버가 종료될 때 클라이언트는 &lt;code>502&lt;/code>나 &lt;code>504&lt;/code> 에러를 수신하게 됩니다.
가장 기본적인 방법으로는 프로세스 종료 SIGNAL 수신 후 일정 시간을 기다린 후에 서버를 종료하는 방법이 있습니다.&lt;/p></description></item><item><title>mitmproxy 설치하기</title><link>https://psi59.github.io/posts/2020-08-09-mitmproxy-installation/</link><pubDate>Sun, 09 Aug 2020 09:00:00 +0900</pubDate><guid>https://psi59.github.io/posts/2020-08-09-mitmproxy-installation/</guid><description>mitmproxy 이란? mitmproxy is a free and open source interactive HTTPS proxy.
간단하게 설명하자면 클라이언트와 서버간의 HTTP(S) Request와 Response를 모니터링하고 Debugging 할 수 있는 오픈소스 툴입니다.
여기서 mitm의 의미를 짚고 넘어가자면 mitm은 man in the middle의 약자이며 직역하면 중간자라고 할 수 있습니다.
그림1은 중간자가 없는 기존 클라이언트와 서버와의 통신 구조는 간략하게 표현한 것입니다.
그림2는 중간자가 포함된 클라이언트와 서버의 통신 구조입니다.
그림2와 같이 중간자가 클라이언트와 서버 사이에 위치하기 때문에 Request와 Response를 모니터링할 수 있게 됩니다.</description></item><item><title>Concurrency와 Parallelism의 차이</title><link>https://psi59.github.io/posts/2020-02-06-concurrency-parallelism/</link><pubDate>Thu, 06 Feb 2020 09:30:00 +0900</pubDate><guid>https://psi59.github.io/posts/2020-02-06-concurrency-parallelism/</guid><description>최근에 golang을 처음부터 다시 공부하면서 헷갈렸던 Concurrency와 Parallelism의 차이점과 관계에 대해 개인적으로 공부한 내용을 간단한 예시와 함께 정리한 글입니다.
&amp;ldquo;Concurrency is about dealing with lots of things at once. Parallelism is about doing lots of things at once.&amp;rdquo;
- Rob Pike, Concurrency is not Parallelism
Go언어 주요 개발자 중 한명인 &amp;lsquo;롭 파이크&amp;rsquo;는 말을 직역하면 &amp;lsquo;동시성은 한번에 여러가지 일을 다루는 것이다. 병렬성은 한번에 여러가지 일을 하는 것이다.&amp;rsquo;
동시성(Concurrency) Concurrency 동시성은 앞에서 언급했듯이 많은 일을 한번에 다루는 걸 의미합니다.</description></item><item><title>OpenSource 라이센스 간단 정리</title><link>https://psi59.github.io/posts/2020-01-30-summarize-opensource-license/</link><pubDate>Thu, 30 Jan 2020 07:25:11 +0900</pubDate><guid>https://psi59.github.io/posts/2020-01-30-summarize-opensource-license/</guid><description>&lt;p>이 포스트는 오픈소스에 대한 이해를 돕고자 &lt;a href="https://www.olis.or.kr/">OLIS&lt;/a>의 &lt;a href="https://www.olis.or.kr/license/licenseGuide.do">오픈소스 라이선스 가이드&lt;/a>를 베이스로 수집한 정보를 간단하게 정리한 내용입니다.&lt;/p>
&lt;p>따라서, 좀 더 자세한 내용을 원하신다면 &lt;em>&lt;a href="https://www.olis.or.kr/license/licenseGuide.do">오픈소스 라이선스 가이드&lt;/a>를 한번 정독하시는 것을 추천합니다.&lt;/em>&lt;/p></description></item><item><title>Swagger 파일 분리하여 관리하기</title><link>https://psi59.github.io/posts/2019-12-22-swagger_file_split/</link><pubDate>Sun, 22 Dec 2019 16:36:37 +0900</pubDate><guid>https://psi59.github.io/posts/2019-12-22-swagger_file_split/</guid><description>&lt;p>Swagger로 API 문서를 작성하다 보면 스팩 파일(swagger.yaml)이 너무 길어져서 관리가 어려울 때가 있습니다. 그래서 swagger에서는 &lt;code>$ref&lt;/code>를 제공해 parameter와 ruqestbody, response 등을 모듈처럼 사용할 수 있도록 제공하지만 이것 또한 API가 많아지면 스펙파일이 길어지기 마련이죠. 그래서 parameter와 ruqestbody, response은 물론 엔드포인트들을 파일로 분리해서 모듈처럼 관리하여 쉽게 유지보수 하는 걸 이번 포스트에서 해보려고 합니다. 모든 개발에는 유지보수가 가장 중요한 법이니까요.&lt;/p></description></item><item><title>Let's Encrypt 와일드카드 인증서 갱신해보기</title><link>https://psi59.github.io/posts/2018-10-31-letsencrypt-wildcard-certification-renew/</link><pubDate>Wed, 31 Oct 2018 20:29:00 +0900</pubDate><guid>https://psi59.github.io/posts/2018-10-31-letsencrypt-wildcard-certification-renew/</guid><description/></item><item><title>Let's Encrypt 와일드카드 인증서 발급해보기</title><link>https://psi59.github.io/posts/2018-08-04-letsencrypt-wildcard-certification/</link><pubDate>Sat, 04 Aug 2018 11:41:00 +0900</pubDate><guid>https://psi59.github.io/posts/2018-08-04-letsencrypt-wildcard-certification/</guid><description/></item><item><title>Docker DNS 문제 해결하기</title><link>https://psi59.github.io/posts/2018-04-15-docker-dns-problem/</link><pubDate>Sun, 15 Apr 2018 06:15:00 +0900</pubDate><guid>https://psi59.github.io/posts/2018-04-15-docker-dns-problem/</guid><description/></item><item><title>Go의 init 함수 간단 소개!!</title><link>https://psi59.github.io/posts/2018-03-13-go-init-function/</link><pubDate>Tue, 13 Mar 2018 07:52:02 +0900</pubDate><guid>https://psi59.github.io/posts/2018-03-13-go-init-function/</guid><description>&lt;p>Go언어의 init function의 동작과 우선 순위에 대해 정리한 내용입니다.&lt;/p></description></item><item><title>Let's Encrypt로 https 서비스 하기</title><link>https://psi59.github.io/posts/2017-03-30-letsencrypt-certification-issue/</link><pubDate>Thu, 30 Mar 2017 20:08:07 +0900</pubDate><guid>https://psi59.github.io/posts/2017-03-30-letsencrypt-certification-issue/</guid><description>&lt;p>Let&amp;rsquo;s Encrypt 공짜 SSL 인증서 발급하기!!&lt;/p></description></item></channel></rss>